//===============================================
// sketch layer visibility - plugin
//===============================================

@import 'library.cocoascript';
@import 'config.cocoascript';


//store global context reference
var context;

function toggleLayersHandler(_context) {
  context = _context;
  (isShowing()) ? hideLayers() : showLayers();
}


function showLayersHandler(_context) {
  context = _context;
  showLayers();
}


function hideLayersHandler(_context) {
  context = _context;
  hideLayers();
}


function settingsHandler(_context) {
  context = _context;

  //get user defaults
  var defaults = [NSUserDefaults standardUserDefaults];

  //create alert
  var alert = Library.createAlert("Settings", "", "");

  //create layer name view
  var layerNameView = [[NSView alloc] initWithFrame: NSMakeRect(0, 0, 300, 22)];

  //create layer name title
  var layerNameTitle = Library.createLabel('Layer name:', 12, false, NSMakeRect(0, 0, 80, 20));
  [layerNameView addSubview: layerNameTitle];

  //create layer name text field
  var layerNameTextField = [[NSTextField alloc] initWithFrame:NSMakeRect(80, 0, 200, 22)];
  [layerNameView addSubview: layerNameTextField];

  //set current layer name
  if(![defaults objectForKey: "layerName"]) setDefaultLayerName();
  [layerNameTextField setStringValue: [defaults objectForKey: "layerName"]];

  //add layer name view to alert
  [alert addAccessoryView: layerNameView];

    //add bottom buttons
  [alert addButtonWithTitle:"Save"];
  [alert addButtonWithTitle:"Cancel"];

    //show settings alert
  var responseCode = [alert runModal];
  if(responseCode == '1000') {
    //set new search string
    [defaults setObject: [layerNameTextField stringValue] forKey: "layerName"]];
  }
}


function showLayers() {
  findLayers().forEach(function(layer) {
    layer.setIsVisible(true);
  });
}

function hideLayers() {
  findLayers().forEach(function(layer) {
    layer.setIsVisible(false);
  });
}


function isShowing() {
  //track sum and count
  var sum = 0;
  var count = 0;

  //check each layer
  findLayers().forEach(function(layer) {
    sum += Number(layer.isVisible());
    count++;
  });

  //if more than half of layers are visible,
  //consider the state as showing
  return (sum / count > 0.5);
}


function findLayers() {

  var pages = Library.jsArray(context.document.pages());
  var defaults = [NSUserDefaults standardUserDefaults];
  if (![defaults objectForKey: "layerName"]) {
    setDefaultLayerName();
  }
  //find matching layers
  var searchSetting = [defaults objectForKey: "layerName"];
  var nameOrNames = searchSetting.split(',');
  if (nameOrNames.length == 1) {
    nameOrNames = searchSetting;
  }

  var layers = [];
  pages.forEach(function(page) {
    layers = layers.concat(Library.findLayers(nameOrNames, false, false, page, false, null));
  });

  return layers;
}


function setDefaultLayerName() {

  var defaults = [NSUserDefaults standardUserDefaults];
  [defaults setObject: Config.defaultLayerName forKey: "layerName"];
  [defaults synchronize];
}
